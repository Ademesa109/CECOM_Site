(self.webpackChunkannular=self.webpackChunkannular||[]).push([[5959],{3614:(e,t,i)=>{"use strict";i.d(t,{ab:()=>D,fM:()=>f,EC:()=>I,K:()=>R,Yy:()=>A});var a=i(2151),r=i(5366),n=i(9024),s=i(7570),l=(i(5959),i(1906),i(7064)),o=i(9235),u=(i(611),i(6238),i(5416),i(7701),i(3835),i(9861),i(5333),i(1116)),h=i(2935),d=i(1041),c=i(6174),m=i(4369),_=i(7307),g=i(3169),p=(i(4720),i(3070));class f extends l._A{isSameTime(e,t){return null==e||null==t||this.getHour(e)===this.getHour(t)&&this.getMinute(e)===this.getMinute(t)&&this.getSecond(e)===this.getSecond(t)}copyTime(e,t){this.setHour(e,this.getHour(t)),this.setMinute(e,this.getMinute(t)),this.setSecond(e,this.getSecond(t))}compareDateWithTime(e,t,i){let a=super.compareDate(e,t)||this.getHour(e)-this.getHour(t)||this.getMinute(e)-this.getMinute(t);return i&&(a=a||this.getSecond(e)-this.getSecond(t)),a}setTimeByDefaultValues(e,t){if(!Array.isArray(t))throw Error("@Input DefaultTime should be an array");this.setHour(e,t[0]||0),this.setMinute(e,t[1]||0),this.setSecond(e,t[2]||0)}}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */const D=new r.InjectionToken("ngx-mat-date-formats"),v=new r.InjectionToken("NGX_MAT_DATE_RANGE_SELECTION_STRATEGY");
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */let y=(()=>{class e{constructor(e){this._dateAdapter=e}selectionFinished(e,t){let{start:i,end:a}=t;return null==i?i=e:null==a&&e&&this._dateAdapter.compareDate(e,i)>=0?a=e:(i=e,a=null),new n.C0(i,a)}createPreview(e,t){let i=null,a=null;return t.start&&!t.end&&e&&(i=t.start,a=e),new n.C0(i,a)}}return e.\u0275fac=function(t){return new(t||e)(r["\u0275\u0275inject"](f))},e.\u0275prov=r["\u0275\u0275defineInjectable"]({token:e,factory:e.\u0275fac}),e})();function w(e){return Error(`NgxMatDatepicker: No provider found for ${e}. You must import one of the following modules at your application root: NgxMatNativeDateModule, NgxMatMomentModule, or provide a custom implementation.`)}(0,l.pj)(class{constructor(e){this._elementRef=e}});
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
const M={provide:d.JU,useExisting:(0,r.forwardRef)(()=>k),multi:!0},C={provide:d.Cf,useExisting:(0,r.forwardRef)(()=>k),multi:!0};class b{constructor(e,t){this.target=e,this.targetElement=t,this.value=this.target.value}}let T,k=(()=>{class e{constructor(e,t,i,a){if(this._elementRef=e,this._dateAdapter=t,this._dateFormats=i,this._formField=a,this.dateChange=new r.EventEmitter,this.dateInput=new r.EventEmitter,this._valueChange=new r.EventEmitter,this.stateChanges=new r.EventEmitter,this._onTouched=()=>{},this._cvaOnChange=()=>{},this._validatorOnChange=()=>{},this._datepickerSubscription=s.w.EMPTY,this._localeSubscription=s.w.EMPTY,this._parseValidator=()=>this._lastValueValid?null:{matDatetimePickerParse:{text:this._elementRef.nativeElement.value}},this._minValidator=e=>{const t=this._getValidDateOrNull(this._dateAdapter.deserialize(e.value));return!this.min||!t||this._dateAdapter.compareDateWithTime(this.min,t,this._datepicker.showSeconds)<=0?null:{matDatetimePickerMin:{min:this.min,actual:t}}},this._maxValidator=e=>{const t=this._getValidDateOrNull(this._dateAdapter.deserialize(e.value));return!this.max||!t||this._dateAdapter.compareDateWithTime(this.max,t,this._datepicker.showSeconds)>=0?null:{matDatetimePickerMax:{max:this.max,actual:t}}},this._filterValidator=e=>{const t=this._getValidDateOrNull(this._dateAdapter.deserialize(e.value));return this._dateFilter&&t&&!this._dateFilter(t)?{matDatetimePickerFilter:!0}:null},this._validator=d.kI.compose([this._parseValidator,this._minValidator,this._maxValidator,this._filterValidator]),this._lastValueValid=!1,!this._dateAdapter)throw w("NgxMatDateAdapter");if(!this._dateFormats)throw w("NGX_MAT_DATE_FORMATS");this._localeSubscription=t.localeChanges.subscribe(()=>{this.value=this.value})}set ngxMatDatetimePicker(e){e&&(this._datepicker=e,this._datepicker._registerInput(this),this._datepickerSubscription.unsubscribe(),this._datepickerSubscription=this._datepicker._selectedChanged.subscribe(e=>{this.value=e,this._cvaOnChange(e),this._onTouched(),this.dateInput.emit(new b(this,this._elementRef.nativeElement)),this.dateChange.emit(new b(this,this._elementRef.nativeElement))}))}set ngxMatDatetimePickerFilter(e){this._dateFilter=e,this._validatorOnChange()}get value(){return this._value}set value(e){e=this._dateAdapter.deserialize(e),this._lastValueValid=!e||this._dateAdapter.isValid(e),e=this._getValidDateOrNull(e);const t=this.value;this._value=e,this._formatValue(e),this._dateAdapter.sameDate(t,e)||this._valueChange.emit(e)}get min(){return this._min}set min(e){this._min=this._getValidDateOrNull(this._dateAdapter.deserialize(e)),this._validatorOnChange()}get max(){return this._max}set max(e){this._max=this._getValidDateOrNull(this._dateAdapter.deserialize(e)),this._validatorOnChange()}get disabled(){return!!this._disabled}set disabled(e){const t=null!=e&&"false"!=`${e}`,i=this._elementRef.nativeElement;this._disabled!==t&&(this._disabled=t,this.stateChanges.emit(void 0)),t&&i.blur&&i.blur()}ngOnDestroy(){this._datepickerSubscription.unsubscribe(),this._localeSubscription.unsubscribe(),this._valueChange.complete(),this.stateChanges.complete()}registerOnValidatorChange(e){this._validatorOnChange=e}validate(e){return this._validator?this._validator(e):null}getPopupConnectionElementRef(){return this.getConnectedOverlayOrigin()}getConnectedOverlayOrigin(){return this._formField?this._formField.getConnectedOverlayOrigin():this._elementRef}writeValue(e){this.value=e}registerOnChange(e){this._cvaOnChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e}_onKeydown(e){this._datepicker&&e.altKey&&e.keyCode===o.JH&&!this._elementRef.nativeElement.readOnly&&(this._datepicker.open(),e.preventDefault())}_onInput(e){const t=this._lastValueValid;let i=this._dateAdapter.parse(e,this._dateFormats.parse.dateInput);this._lastValueValid=!i||this._dateAdapter.isValid(i),i=this._getValidDateOrNull(i);const a=this._dateAdapter.isSameTime(i,this._value);null!=i&&(!a||!this._dateAdapter.sameDate(i,this._value))||null==i&&null!=this._value?(this._value=i,this._cvaOnChange(i),this._valueChange.emit(i),this.dateInput.emit(new b(this,this._elementRef.nativeElement))):t!==this._lastValueValid&&this._validatorOnChange()}_onChange(){this.dateChange.emit(new b(this,this._elementRef.nativeElement))}_getThemePalette(){return this._formField?this._formField.color:void 0}_onBlur(){this.value&&this._formatValue(this.value),this._onTouched()}_onFocus(){this._datepicker&&this._datepicker.opened&&this._datepicker.cancel()}_formatValue(e){this._elementRef.nativeElement.value=e?this._dateAdapter.format(e,this._dateFormats.display.dateInput):""}_getValidDateOrNull(e){return this._dateAdapter.isDateInstance(e)&&this._dateAdapter.isValid(e)?e:null}}return e.\u0275fac=function(t){return new(t||e)(r["\u0275\u0275directiveInject"](r.ElementRef),r["\u0275\u0275directiveInject"](f,8),r["\u0275\u0275directiveInject"](D,8),r["\u0275\u0275directiveInject"](p.KE,8))},e.\u0275dir=r["\u0275\u0275defineDirective"]({type:e,selectors:[["input","ngxMatDatetimePicker",""]],hostVars:5,hostBindings:function(e,t){1&e&&r["\u0275\u0275listener"]("input",function(e){return t._onInput(e.target.value)})("change",function(){return t._onChange()})("blur",function(){return t._onBlur()})("focus",function(){return t._onFocus()})("keydown",function(e){return t._onKeydown(e)}),2&e&&(r["\u0275\u0275hostProperty"]("disabled",t.disabled),r["\u0275\u0275attribute"]("aria-haspopup",t._datepicker?"dialog":null)("aria-owns",(null==t._datepicker?null:t._datepicker.opened)&&t._datepicker.id||null)("min",t.min?t._dateAdapter.toIso8601(t.min):null)("max",t.max?t._dateAdapter.toIso8601(t.max):null))},inputs:{value:"value",ngxMatDatetimePicker:"ngxMatDatetimePicker",ngxMatDatetimePickerFilter:"ngxMatDatetimePickerFilter",min:"min",max:"max",disabled:"disabled"},outputs:{dateChange:"dateChange",dateInput:"dateInput"},exportAs:["ngxMatDatetimePickerInput"],features:[r["\u0275\u0275ProvidersFeature"]([M,C,{provide:c.Jk,useExisting:e}])]}),e})(),A=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=r["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=r["\u0275\u0275defineInjector"]({imports:[[u.ez,c.c,d.UX,d.u5,_.Ps,m.ot]]}),e})(),I=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=r["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=r["\u0275\u0275defineInjector"]({providers:[n.Lv,{provide:v,useClass:y}],imports:[[u.ez,n.FA,h.Is,a.eL,d.u5,_.Ps,m.ot,c.c,A]]}),e})();try{T="undefined"!=typeof Intl}catch(W){T=!1}const F={long:["January","February","March","April","May","June","July","August","September","October","November","December"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],narrow:["J","F","M","A","M","J","J","A","S","O","N","D"]},O=x(31,e=>String(e+1)),E={long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],narrow:["S","M","T","W","T","F","S"]},V=/^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;function x(e,t){const i=Array(e);for(let a=0;a<e;a++)i[a]=t(a);return i}let S=(()=>{class e extends f{constructor(e,t){super(),this.useUtcForDisplay=!0,super.setLocale(e),this.useUtcForDisplay=!t.TRIDENT,this._clampDate=t.TRIDENT||t.EDGE}getYear(e){return e.getFullYear()}getMonth(e){return e.getMonth()}getDate(e){return e.getDate()}getDayOfWeek(e){return e.getDay()}getMonthNames(e){if(T){const t=new Intl.DateTimeFormat(this.locale,{month:e,timeZone:"utc"});return x(12,e=>this._stripDirectionalityCharacters(this._format(t,new Date(2017,e,1))))}return F[e]}getDateNames(){if(T){const e=new Intl.DateTimeFormat(this.locale,{day:"numeric",timeZone:"utc"});return x(31,t=>this._stripDirectionalityCharacters(this._format(e,new Date(2017,0,t+1))))}return O}getDayOfWeekNames(e){if(T){const t=new Intl.DateTimeFormat(this.locale,{weekday:e,timeZone:"utc"});return x(7,e=>this._stripDirectionalityCharacters(this._format(t,new Date(2017,0,e+1))))}return E[e]}getYearName(e){if(T){const t=new Intl.DateTimeFormat(this.locale,{year:"numeric",timeZone:"utc"});return this._stripDirectionalityCharacters(this._format(t,e))}return String(this.getYear(e))}getFirstDayOfWeek(){return 0}getNumDaysInMonth(e){return this.getDate(this._createDateWithOverflow(this.getYear(e),this.getMonth(e)+1,0))}clone(e){return new Date(e.getTime())}createDate(e,t,i){if(t<0||t>11)throw Error(`Invalid month index "${t}". Month index has to be between 0 and 11.`);if(i<1)throw Error(`Invalid date "${i}". Date has to be greater than 0.`);let a=this._createDateWithOverflow(e,t,i);if(a.getMonth()!=t)throw Error(`Invalid date "${i}" for month with index "${t}".`);return a}today(){return new Date}parse(e){return"number"==typeof e?new Date(e):e?new Date(Date.parse(e)):null}format(e,t){if(!this.isValid(e))throw Error("NativeDateAdapter: Cannot format invalid date.");if(T){this._clampDate&&(e.getFullYear()<1||e.getFullYear()>9999)&&(e=this.clone(e)).setFullYear(Math.max(1,Math.min(9999,e.getFullYear()))),t=Object.assign(Object.assign({},t),{timeZone:"utc"});const i=new Intl.DateTimeFormat(this.locale,t);return this._stripDirectionalityCharacters(this._format(i,e))}return this._stripDirectionalityCharacters(e.toDateString())}addCalendarYears(e,t){return this.addCalendarMonths(e,12*t)}addCalendarMonths(e,t){let i=this._createDateWithOverflow(this.getYear(e),this.getMonth(e)+t,this.getDate(e));return this.getMonth(i)!=((this.getMonth(e)+t)%12+12)%12&&(i=this._createDateWithOverflow(this.getYear(i),this.getMonth(i),0)),i}addCalendarDays(e,t){return this._createDateWithOverflow(this.getYear(e),this.getMonth(e),this.getDate(e)+t)}toIso8601(e){return[e.getUTCFullYear(),this._2digit(e.getUTCMonth()+1),this._2digit(e.getUTCDate())].join("-")}deserialize(e){if("string"==typeof e){if(!e)return null;if(V.test(e)){let t=new Date(e);if(this.isValid(t))return t}}return super.deserialize(e)}isDateInstance(e){return e instanceof Date}isValid(e){return!isNaN(e.getTime())}invalid(){return new Date(NaN)}getHour(e){return e.getHours()}getMinute(e){return e.getMinutes()}getSecond(e){return e.getSeconds()}setHour(e,t){e.setHours(t)}setMinute(e,t){e.setMinutes(t)}setSecond(e,t){e.setSeconds(t)}_createDateWithOverflow(e,t,i){const a=new Date(e,t,i);return e>=0&&e<100&&a.setFullYear(this.getYear(a)-1900),a}_2digit(e){return("00"+e).slice(-2)}_stripDirectionalityCharacters(e){return e.replace(/[\u200e\u200f]/g,"")}_format(e,t){const i=new Date;return i.setUTCFullYear(t.getFullYear(),t.getMonth(),t.getDate()),i.setUTCHours(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()),e.format(i)}}return e.\u0275fac=function(t){return new(t||e)(r["\u0275\u0275inject"](l.Ad,8),r["\u0275\u0275inject"](g.t4))},e.\u0275prov=r["\u0275\u0275defineInjectable"]({token:e,factory:e.\u0275fac}),e})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */const N={year:"numeric",month:"numeric",day:"numeric",hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"},Y={parse:{dateInput:N},display:{dateInput:N,monthYearLabel:{year:"numeric",month:"short"},dateA11yLabel:{year:"numeric",month:"long",day:"numeric"},monthYearA11yLabel:{year:"numeric",month:"long"}}};let j=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=r["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=r["\u0275\u0275defineInjector"]({providers:[{provide:f,useClass:S}],imports:[[g.ud]]}),e})();const P=Y;let R=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=r["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=r["\u0275\u0275defineInjector"]({providers:[{provide:D,useValue:P}],imports:[[j]]}),e})()}}]);